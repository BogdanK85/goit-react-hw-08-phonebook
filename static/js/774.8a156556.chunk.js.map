{"version":3,"file":"static/js/774.8a156556.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactList/ContactList.styled.js","components/ContactList/contactList.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","helpers/hookUseContacts.js","components/Contact/Contact.jsx","components/Filter/filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contact.styled.js","pages/Contacts/Contacts.jsx","redux/selectors.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const SectionStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 5px;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(\n    86deg,\n    rgba(134, 40, 80, 1) 0%,\n    rgba(113, 10, 52, 1) 22%,\n    rgba(112, 45, 51, 1) 63%,\n    rgba(133, 133, 133, 1) 100%\n  );\n`;\nexport const SectionTitle = styled.h2`\n  color: beige;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 50px;\n`;\n","import { SectionStyle, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionStyle>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const ContactContainer = styled.ul`\n  display: flex;\n  width: 400px;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  padding: 1px 50px;\n  border-radius: 8px;\n  background-color: #fff;\n  position: relative;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  width: 100%;\n  flex-wrap: nowrap;\n  padding: 0;\n  justify-content: space-around;\n  align-items: center;\n  gap: 20px;\n  font-size: 20px;\n  font-weight: 600;\n`;\nexport const ContactItemText = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 65px;\n  padding: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  background: rgba(223, 125, 125, 0.5);\n  color: #801919;\n  cursor: pointer;\n  border-radius: 7px;\n  border: #0004ff;\n  transition: background 0.3s, color 0.3s;\n\n  &:hover {\n    background: rgba(223, 125, 125, 0.8);\n    color: white;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import {\n  ContactContainer,\n  ContactItemText,\n  ContactListItem,\n  DeleteBtn,\n} from './ContactList.styled';\n\nexport const ContactList = ({ filteredContacts, onDeleteContact }) => {\n  return (\n    <ContactContainer>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id}>\n          <ContactItemText>Name: {name}</ContactItemText>\n          <ContactItemText>Number: {number}</ContactItemText>\n          <DeleteBtn type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </DeleteBtn>\n        </ContactListItem>\n      ))}\n    </ContactContainer>\n  );\n};\nexport default ContactList;\n","import { styled } from 'styled-components';\n\nexport const NotifyText = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 50px;\n`;\nexport const NotifyParagraph = styled.p`\n  font-size: 25px;\n  font-weight: 600;\n  color: red;\n  margin-left: 50px;\n`;\n","import { NotifyParagraph, NotifyText } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return (\n    <NotifyText>\n      <NotifyParagraph>{message}</NotifyParagraph>\n    </NotifyText>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter, selectLoading } from 'redux/selectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  return {\n    isLoading,\n    contacts,\n    filter,\n  };\n};\n","import ContactList from 'components/ContactList/contactList';\nimport { Loading } from 'components/Loader/Loader';\nimport { Notification } from 'components/Notification/Notification';\nimport { useContacts } from 'helpers/hookUseContacts';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactById } from 'redux/contactsOperations';\n\nexport const Contact = () => {\n  const { isLoading, contacts, filter } = useContacts();\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact => {\n    return (\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter)\n    );\n  });\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContactById(contactId));\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      {contacts.length === 0 ? (\n        <Notification message=\"There are no contacts\" />\n      ) : filteredContacts.length > 0 ? (\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={onDeleteContact}\n        />\n      ) : (\n        <Notification message=\"There are no contacts for this match\" />\n      )}\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterStyle = styled.label`\n  display: flex;\n  width: 300px;\n  margin-left: 50px;\n  flex-direction: column;\n  padding-left: 10px;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 280px;\n  height: 20px;\n  margin-bottom: 30px;\n  background: rgba(0, 0, 0, 0.19);\n  border: none;\n  outline: none;\n  padding: 7px;\n  font-size: 20px;\n  color: #frf;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n`;\n\nexport const FilterText = styled.p`\n  font-size: 22px;\n  font-weight: 500;\n  color: beige;\n`;\n","import { useContacts } from 'helpers/hookUseContacts';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contactsSlice';\nimport { FilterStyle, FilterText, Input } from './filter.styled';\n\nexport const Filter = () => {\n  const { filter } = useContacts();\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(addFilter(event.target.value));\n  };\n\n  return (\n    <FilterStyle>\n      <FilterText>Find contact by name</FilterText>\n      <Input\n        name=\"filter\"\n        value={filter}\n        id=\"filter\"\n        type=\"text\"\n        placeholder=\"Search contacs\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={handleFilterChange}\n      />\n    </FilterStyle>\n  );\n};\n","const { styled } = require('styled-components');\n\nexport const Wraper = styled.div`\n  align-items: center;\n  .link {\n    display: inline-block;\n    text-decoration: none;\n    font-size: 20px;\n    font-weight: 600;\n    color: beige;\n    padding: 13px;\n    &:hover,\n    &:focus {\n      color: rgb(222, 155, 28);\n    }\n  }\n  .navBtn {\n    display: inline-block;\n    zoom: 1;\n    padding: 7px 20px 7px;\n    margin-bottom: 0;\n    font-size: 25px;\n    line-height: 18px;\n    text-align: center;\n    background-color: rgb(290, 255, 233);\n    color: rgb(41, 18, 18);\n    text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);\n    border-radius: 20px;\n    margin-left: 35px;\n    margin-top: -45px;\n    &: hover {\n      background: rgba(223, 125, 125, 0.8);\n      color: white;\n    }\n  }\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getAllContacts } from 'redux/contactsOperations';\nimport { Wraper } from './Contact.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  });\n\n  return (\n    <>\n      <Section>\n        <Wraper>\n          <NavLink className=\"link navBtn\" to=\"/newaccountpage\">\n            Return to add account\n          </NavLink>\n        </Wraper>\n\n        <div>\n          <Filter />\n        </div>\n        <div>\n          <Contact />\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectLoading = state => state.contacts.contacts.isLoading;\n// export const selectFilteredContacts = createSelector(\n//   [selectContacts, selectFilter],\n//   (contacts, filter) => {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// );\n"],"names":["SectionStyle","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","ContactContainer","ContactListItem","ContactItemText","_templateObject3","DeleteBtn","_templateObject4","filteredContacts","onDeleteContact","map","_ref2","id","name","number","type","onClick","NotifyText","NotifyParagraph","Notification","message","useContacts","isLoading","useSelector","selectLoading","contacts","selectContacts","filter","selectFilter","Contact","_useContacts","dispatch","useDispatch","contact","toLowerCase","includes","Loading","_Fragment","length","ContactList","contactId","deleteContactById","FilterStyle","Input","FilterText","Filter","value","placeholder","pattern","onChange","event","addFilter","target","Wraper","require","div","useEffect","getAllContacts","NavLink","className","to","state","items"],"sourceRoot":""}